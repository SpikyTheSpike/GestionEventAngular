{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RegistrationService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this.token = sessionStorage.getItem('token');\n    this._url = 'https://localhost:7245/api/Registration/';\n  }\n  join(id, registration) {\n    this.token = sessionStorage.getItem('token');\n    return this._httpClient.post(this._url + \"Join/\" + id, registration, {\n      headers: {\n        'Authorization': 'Bearer ' + this.token\n      }\n    });\n  }\n}\nRegistrationService.ɵfac = function RegistrationService_Factory(t) {\n  return new (t || RegistrationService)(i0.ɵɵinject(i1.HttpClient));\n};\nRegistrationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegistrationService,\n  factory: RegistrationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,UAAK,GAAmBC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC/C,SAAI,GAAY,0CAA0C;EAClB;EAGhDC,IAAI,CAACC,EAAW,EAAGC,YAA4B;IAC7C,IAAI,CAACC,KAAK,GAAEL,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO,IAAI,CAACF,WAAW,CAACO,IAAI,CAAgB,IAAI,CAACC,IAAI,GAAC,OAAO,GAACJ,EAAE,EAAGC,YAAY,EAAE;MAAEI,OAAO,EAAG;QAAE,eAAe,EAAG,SAAS,GAAG,IAAI,CAACH;MAAK;IAAG,CAAC,CAAC;EAC9I;;AATWR,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAY,SAAnBZ,mBAAmB;EAAAa,YAFlB;AAAM","names":["RegistrationService","constructor","_httpClient","sessionStorage","getItem","join","id","registration","token","post","_url","headers","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Tom\\OneDrive\\Documents\\Visual Studio\\Angular\\arnaud\\Labo02\\src\\app\\shared\\services\\registration.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IRegistration } from 'src/app/models/IRegistration';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationService {\r\n  token : string | null = sessionStorage.getItem('token')\r\n  private _url : string = 'https://localhost:7245/api/Registration/';\r\n  constructor(private _httpClient : HttpClient) { }\r\n\r\n\r\n  join(id : number , registration : IRegistration) : Observable<IRegistration>{\r\n    this.token= sessionStorage.getItem('token')\r\n    return this._httpClient.post<IRegistration>(this._url+\"Join/\"+id , registration, { headers : { 'Authorization' : 'Bearer ' + this.token  }});\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}